/**
 * Copyright 2014 multibit.org
 *
 * Licensed under the MIT license (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://opensource.org/licenses/mit-license.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Author: Tennom
 */
 
/* Notes:
 * - To regenerate after editing, run mvn clean package -DupdateProtobuf
 */

option java_package = "org.multibit.hd.core.protobuf";
option java_outer_classname = "MBHDTemplatesProtos";

/**
 * A fiat amount, together with exchange details of how it was generated
 */
message FiatPayment {
  required string amount = 1;       // The fiat amount of the transaction or request.
  // Stored as a non localised string e.g. 1234.56
  required string currency = 2;     // The currency code of the fiat amount (e.g. USD)
  optional string exchange = 3;     // The exchange name used in the definition of the fiat amount e.g. "Bitstamp";
  optional string rate = 4;         // The exchange rate used in the definition of the fiat amount (this is the price of 1 BTC in the fiat currency)
  // Stored as a non localised string e.g. 1234.56
}

/*
A single recipient
*/
message Recipient{
  required string address = 1;
  optional string name = 2; 		//names are more intuitive if it's existing in contacts
}
/*
 * A single template
 */
message Template {
  required string hash = 1;                 // The transaction hash (i.e. the transaction id as per the wallet Transaction.hash.toString)
                                            // The corresponding transaction is expected to be in the wallet.
  repeated Recipient address = 2;           // The payment request bitcoin address (as per the bitcoin URI spec)
  // Each new request has a distinct address so it can be used as a key for Requests

  optional string label = 3;             // The label (payment title)
  optional int64 amountBTC = 4;         // The bitcoin amount, in satoshi (as per the bitcoin URI spec)
  optional FiatPayment amount_fiat = 5;  // The fiat equivalent of the bitcoin amount
  optional int64 date = 6;               // The creation datetime (millis since epoch)
  optional string note = 7;              // description of the template or notes for bookkeeping

}

/**
 * A collection of templates
 */
message Templates {
  repeated Template template = 1;                  // the templates, repeated
}

